---
title: "try again"
author: "Caleb Skinner"
format:
  pdf:
    linestretch: 2
    include-in-header:
      text: |
        \pagenumbering{gobble}
    header-includes: |
        \usepackage{indentfirst}
        \setlength{\parindent}{2em}
        \usepackage[all]{nowidow}
        \hyphenpenalty=10000
    template-partials:
      - toc.tex
linkcolor: black
font-family: Times New Roman
fontsize: "12pt"
tbl-cap-location: "top"
fig-cap-location: "top"
geometry:
      - top=25.4mm
      - left=38.1mm
      - right=25.4mm
      - bottom=25.4mm
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  comment = "#", fig.height = 3, 
  cache = FALSE, collapse = TRUE,
  error = TRUE, echo = FALSE,
  message = FALSE,
  warning = FALSE)
```

```{r, include = FALSE}
library("arrow")
library("here")
library("scales")
library("flextable")
library("tidyverse"); theme_set(theme_minimal())
library("tidymodels")
library("forstringr")
library("fpp3")
library("patchwork")
library("yardstick")
library("janitor")
library("performance")
library("modelsummary")
library("corrr")
library("gt")

cov <- read_parquet(here("covariates.parquet"))
gs <- read_parquet(here("grandslams2.parquet"))
```

```{r table setup, include = FALSE}
set_flextable_defaults(
  font.size = 10, theme_fun = theme_apa,
  padding = 3,
  background.color = "#EFEFEF",
  text.align = "center")

apa <- function(x) {
  gt(x) %>%
  tab_options(
    table.border.top.color = "#EFEFEF",
    heading.title.font.size = px(16),
    column_labels.border.top.width = 3,
    column_labels.border.top.color = "black",
    column_labels.border.bottom.width = 3,
    column_labels.border.bottom.color = "black",
    table_body.border.bottom.color = "black",
    table.border.bottom.color = "#EFEFEF",
    table.width = pct(100),
    table.background.color = "#EFEFEF"
  ) %>%
  cols_align(align="center") %>%
  tab_style(
    style = list(
      cell_borders(
        sides = c("top", "bottom"),
        color = "#EFEFEF",
        weight = px(1)
      ),
      cell_text(
        align="center"
      ),
      cell_fill(color = "#EFEFEF", alpha = NULL)
      ),
    locations = cells_body(
      columns = everything(),
      rows = everything()
    )
  )
}
```

\newpage

\pagenumbering{arabic}
\begin{spacing}{1}
\vspace*{.1mm}
\begin{center}
\setlength{\parskip}{12pt}

CHAPTER ONE

Introduction

\end{center}
\end{spacing}
\setlength{\parskip}{12pt}

"He is feeling hot today"; "she is a streaky shooter"; "the team has seized the momentum." In modern sports culture, individuals liberally attribute results to the momentum effect. These phrases are prevalent in expert analysis, colloquial commentary, and even accounts from the players themselves. But what if these conclusions are inflated? In a landmark study, Gilovich, Vallone, & Tversky (1985) find no evidence for momentum in professional basketball players' shooting even though both fans and players expect past results to be correlated with future results. Several studies affirm this conclusion and find no evidence for momentum in baseball (Albright, 1989; Gould, 1989) and basketball (Vergin, 2000). In response, several researchers narrowed their focus to more specific and controlled circumstances. These recent studies have found evidence for momentum among horseshoe pitchers (Smith, 2003), bowling (Dorsey-Palmateer & Smith, 2004), volleyball (Raab, Gula, & Gigerenzer, 2012), american football (Roebber, Burlingame, & deWinter, 2022), and basketball (Jane, 2023). However, in recent years, professional tennis has served as the most prolific topic for momentum literature. Tennis's repetitive structure and breadth of available data facilitates research. Within the last decade, several papers have discovered evidence for momentum in professional tennis within specific intervals.

\setlength{\parskip}{0pt}

This paper proposes a novel holistic definition and measurement for momentum that describes a player's momentum at any given point throughout an entire match. This measurement allows relationships discovered in several other papers to be integrated and compared in interpretable methods. We seek to synthesize these discoveries in a holistic assessment of momentum in tennis throughout an entire match. Many of the questions we ask and relationships we analyze are not unique to momentum literature, but this is the first paper seeking to incorporate the findings into a single model. Overall, our goal is twofold. First, we aim to assess the existence of momentum in a professional tennis match. Do the results of past points in a tennis match impact future results? Second, we hope to identify the relationships between several features of a tennis point and the momentum of match. What specific circumstances in past points tend to increase or decrease the future trajectory of a match?
\textit{Tournament.} Each of the four Grand Slams hold different characteristics that affect the player's style of play. The surface of the court and common weather conditions can cause the same stroke to travel at different speeds and spin rates. Generally, the conditions at Wimbledon are fastest and those at the French Open are slowest. However, these exact conditions vary from year to year. They are even impacted by the time of day. As seen in @fig-server-by-tournament, these conditions most noticeably impact the players' dominance on the serve.

```{r}
#| label: fig-server-by-tournament
#| fig-cap: "Tournament Impact on Serve Dominance"
gs %>% group_by(tournament) %>%
  summarise(
    sw_point = sum(server == point_victor),
    rw_point = sum(server != point_victor),
    sw_game = sum(server == game_victor & tiebreak == 0),
    rw_game = sum(server != game_victor & game_victor != 0 & tiebreak == 0)) %>%
  mutate(
    tournament = str_remove(tournament, "open"),
    tournament = str_replace(tournament, "aus", "australian"),
    tournament = str_to_title(tournament),
    tournament = str_replace(tournament, "Us", "US")) %>%
  rowwise() %>%
  transmute(
    tournament = factor(tournament, levels = c("Australian", "French", "Wimbledon", "US")),
    Points = sum(sw_point)/(sum(rw_point)+sum(sw_point)),
    Games = sum(sw_game)/(sum(rw_game)+sum(sw_game))) %>%
  pivot_longer(cols = c(Points, Games), names_to = "stat", values_to = "prop") %>%
  ggplot() +
  geom_bar(aes(x = tournament, y = prop, fill = stat), stat = "identity", position = position_dodge2(reverse = TRUE)) +
  labs(y = "", x = "", title = "") +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_discrete(name = "", breaks = c("Points", "Games")) +
  coord_cartesian(ylim = c(.5, .8)) +
  theme(plot.title=element_blank())
```

These changes in conditions lead to a slightly different overall style of play. @tbl-tournament displays descriptive statistics of the styles of play at the tournaments. Rallies are shorter at Wimbledon. Serve speeds and winners are higher at Wimbledon and lower at the French Open. We will use the categorical variable **tournament** to explain this situation.

```{=latex}
\begin{spacing}{1}
```

```{r}
#| label: tbl-tournament
#| tbl-cap: "Tournament Style of Play"

gs %>% group_by(tournament) %>%
  mutate(first_serve = if_else(serve_no == 1, speed_mph, NA),
         second_serve = if_else(serve_no == 2, speed_mph, NA),
         tournament = factor(tournament, levels = c("ausopen", "frenchopen", "wimbledon", "usopen"))
         ) %>%
  summarise(
    "Rally Length" = mean(rally_count, na.rm = TRUE),
    "First Serve Speed" = mean(first_serve, na.rm = TRUE),
    "Second Serve Speed" = mean(second_serve, na.rm = TRUE),
    "Ace Rate" = percent((sum(p1_ace == 1) + sum(p2_ace == 1))/n(), accuracy = .01),
    "Winner Rate" = percent((sum(p1_winner == 1) + sum(p2_winner == 1))/n(), accuracy = .01)) %>%
  mutate(
    across(where(is.numeric), ~round(.x, digits = 2)),
    tournament = recode(tournament,
                        "ausopen" = "Australian Open",
                        "frenchopen" = "French Open",
                        "usopen" = "US Open",
                        "wimbledon" = "Wimbledon")) %>%
  rename("Tournament" = "tournament") %>%
  gt()
  # flextable() %>%
  # align(align = "center", part = "all") %>%
  # width(j = 1, width = 1.2) %>%
  # width(j = c(2:6), width = .95)
```

```{=latex}
\end{spacing}
```

\textit{Sex.} In general, the structural aspects of men's and women's tennis are very similar. In the Grand Slams, men play a best-of-five set match while women play a best-of-three set match. Otherwise, the conditions are exactly same. Still, this small difference impacts our study of trends in momentum over time. Men play more points over the course of a match, so there are more opportunities to observe changes in momentum. Men play an average of 221.6 points per match and women play an average of 139.9 points per match. Thus, while 49.1% of our data set are women's matches (3885 matches), only 37.8% of the points are played by women (543284 points). @fig-match-length displays the match length distribution for men's and women's matches.

```{r}
#| label: fig-match-length
#| fig-cap: "Match Length"
gs %>% filter(match_pt == 1) %>%
  select(sex, point_no, match_id) %>%
  group_by(sex) %>% 
  ggplot() +
  geom_density(aes(x = point_no, group = sex, color = factor(sex))) +
  labs(x = "Points", y = "", title = "", color = "Sex") +
  scale_color_discrete(name = "", labels = c("Women", "Men")) +
  scale_y_continuous(breaks = NULL) +
  coord_cartesian(xlim = c(0,500)) +
  theme(plot.title=element_blank())
```

While the rules are nearly identical, the characteristics of the men's and women's games differ in the relative dominance of the serve. Men tend to win a higher proportion of points while serving than women. Women still have an advantage on their serve, but it is much lower.

In @tbl-game-full-results, we show the full results for the six game level models. The dependent variable is **future momentum**. Many covariates apply for both player 1 and player 2. We use the prefix "P1" to denote player 1 and "P2" to denote player 2 for all such variables.

\bigskip

\medskip

```{=latex}
\begin{spacing}{1}
```

```{r}
#| label: tbl-game-full-results
#| tbl-cap: "Game Level Model Full Results"

lm_spec <- linear_reg() %>%
  set_mode("regression") %>%
  set_engine("lm")

game_cov <- cov %>%
  group_by(match_id) %>%
  mutate(
    interruption = factor(lead(interruption)),
    change_ends = factor(lead(change_ends))) %>%
  filter(last_pt_game == 1) %>%
  mutate(
    set_victor = case_when(
      last_pt_set == "1" & game_victor == "1" ~ 1,
      last_pt_set == "1" & game_victor == "2" ~ 2,
      .default = 0) %>% factor(),
    lead1_gradient_forward = lead(gradient_forward),
    game_victor = factor(if_else(game_victor == 2, 0, 1)),
    tiebreak_victor = tiebreak_victory) %>%
  select(-tiebreak_victory) %>%
  ungroup()

game_cov_model <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:sex:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor + 
        tiebreak_victor + set_victor, data = game_cov)

game_cov_men <- game_cov %>% filter(sex == "men")

game_cov_model_men <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor + 
        tiebreak_victor + set_victor, data = game_cov_men)

game_cov_women <- game_cov %>% filter(sex == "women")

game_cov_model_women <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor + 
        tiebreak_victor + set_victor, data = game_cov_women)

game_cov_close <- game_cov %>%
  filter(between(bet_odds, 40, 60))

game_cov_model_close <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:sex:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor  + 
        tiebreak_victor + set_victor, data = game_cov_close)

game_cov_close_men <- game_cov_close %>% filter(sex == "men")

game_cov_model_close_men <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor  + 
        tiebreak_victor + set_victor, data = game_cov_close_men)

game_cov_close_women <- game_cov_close %>% filter(sex == "women")

game_cov_model_close_women <- lm_spec %>%
  fit(gradient_forward ~ game_victor:server + server:tournament + game_victor + bet_odds + interruption:game_victor + change_ends:game_victor +
        tiebreak_victor + set_victor, data = game_cov_close_women)

prep_linear_table_appendix <- function(model_fit, name){
  model_fit %>% 
    pluck("fit") %>%
    tidy() %>%
    clean_names() %>%
    select(-statistic) %>%
    na.omit() %>%
    mutate(
      across(where(is.numeric), ~round(.x, digits = 4)),
      symbol = case_when(
        p_value < .001 ~ "***",
        p_value < .01 ~ "**",
        p_value < .05 ~ "*",
        .default = ""),
      estimate = str_c(as.character(format(estimate, scientific = FALSE)), symbol),
      std_error = str_c("(", format(std_error, scientific = FALSE), ")")) %>%
    pivot_longer(cols = c(estimate, std_error), names_to = "metric", values_to = name) %>%
    select(-symbol, -p_value)
}

prep_linear_tables_appendix <- function(comb_full, comb_reduced, men_full, men_reduced, women_full, women_reduced){
  c1 <- prep_linear_table_appendix(comb_reduced, "Combined Reduced")
  c2 <- prep_linear_table_appendix(comb_full, "Combined Full") %>%
    left_join(c1, by = join_by(term, metric))
  m1 <- prep_linear_table_appendix(men_reduced, "Men Reduced") %>% mutate(term = str_replace_all(term, "tourn", "sexmen:tourn"))
  m2 <- prep_linear_table_appendix(men_full, "Men Full") %>% mutate(term = str_replace_all(term, "tourn", "sexmen:tourn")) %>%
    left_join(m1, by = join_by(term, metric))
  w1 <- prep_linear_table_appendix(women_reduced, "Women Reduced") %>% mutate(term = str_replace_all(term, "tourn", "sexwomen:tourn"))
  w2 <- prep_linear_table_appendix(women_full, "Women Full") %>% mutate(term = str_replace_all(term, "tourn", "sexwomen:tourn")) %>%
    left_join(w1, by = join_by(term, metric))

  full_join(c2, m2, by = join_by(term, metric)) %>%
    left_join(w2, by = join_by(term, metric)) %>%
    mutate(
      term = str_replace_all(term, "unf_err1", "unforced_error"),
      term = str_replace_all(term, "double_fault1", "double_fault"),
      term = str_replace_all(term, "_", " "),
      term = str_replace_all(term, ":", " & "),
      term = str_replace_all(term, "server1", "server"),
      term = str_replace_all(term, "server0", "returner"),
      term = str_remove(term, "sex"),
      term = str_remove(term, "tournament"),
      term = str_remove(term, "\\("),
      term = str_remove(term, "\\)"),
      term = str_replace_all(term, "open", " open"),
      term = str_replace_all(term, "victor1", "victor"),
      term = str_replace_all(term, "victor0", "loser"),
      term = str_replace_all(term, "ace1", "ace"),
      term = str_replace_all(term, "winner1", "winner"),
      term = str_replace_all(term, "point1", "point"),
      term = str_replace_all(term, "ends1", "ends"),
      term = str_replace_all(term, "interruption1", "interruption"),
      term = str_to_title(term),
      term = str_replace(term, "Us", "US"),
      term = str_replace(term, "Aus", "Australian"),
      term = dplyr::recode(term,
                    "Bet Odds" = "Pre-Match Win Probability",
                    "Break Saved1" = "P1 Break Saved",
                    "Break Saved2" = "P2 Break Saved",
                    "Break Converted1" = "P1 Break Converted",
                    "Break Converted2" = "P2 Break Converted",
                    "Set Victor" = "P1 Set Victor",
                    "Set Victor2" = "P2 Set Victor",
                    "Tiebreak Victor" = "P1 Tiebreak Victor",
                    "Tiebreak Victor2" = "P2 Tiebreak Victor",
                    )) %>%
    select(-metric) %>%
    rename_with(str_to_title)
}

prep_linear_tables_appendix(game_cov_model, game_cov_model_close, game_cov_model_men, game_cov_model_close_men, game_cov_model_women, game_cov_model_close_women) %>%
  apa()

  # flextable() %>%
  # align(align = "center", part = "all") %>%
  # merge_v(j = ~Term) %>%
  # add_header_row(
  #   values = c("", "Combined", "Men", "Women"),
  #   colwidths = c(1, 2, 2, 2), top = TRUE) %>%
  # set_header_labels(values = c("Term", "Full", "Reduced", "Full", "Reduced", "Full", "Reduced")) %>%
  # width(j = 1, width = 1.5)
```

```{=latex}
\end{spacing}
```
